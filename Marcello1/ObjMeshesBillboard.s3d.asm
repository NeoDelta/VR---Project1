0:	PUSHN	0		
1:	CALLX	11 :CVMMOUSE		0
2:	POP  			G0:MOUSE
3:	CALLX	5 :CVMJOYSTICK		0
4:	POP  			G1:JOYSTICK
5:	CALLX	8 :CVMMMAVI		0
6:	POP  			G2:MMAVI
7:	CALLX	10 :CVMMMMP3		0
8:	POP  			G3:MMMP3
9:	CALLX	9 :CVMMMMIDI		0
10:	POP  			G4:MMMIDI
11:	ANEW 	0		G5:IMPULSEDATA
12:	MOV  	<cVct0 [ 0 , 5 , 30 ]>		G7:CAMPOS
13:	MOV  	<cVct1 [ -10 , 20 , 50 ]>		G9:POSL
14:	MOV  	<cVct2 [ -5 , 0 , 0 ]>		G20:POS_CUBE
15:	MOV  	<cVct3 [ 2 , 0 , 0 ]>		G21:POS_BALL
16:	MOV  	<cVct4 [ 0 , 5 , 0 ]>		G22:POS_SIMPSON
17:	MOV  	<cVct5 [ 1 , 1 , 1 , 1 ]>		G23:MOD_COLOR
18:	MOV  	False		G24:TRIGGER_SIMPSON_MOVEMENT
19:	MOV  	False		G25:TRIGGER_BALL_ROTATE
20:	MOV  	False		G26:TRIGGER_BALL_PADRE_ROTATE
21:	MOV  	False		G27:TRIGGER_CUBE_MOVEMENT
22:	MOV  	False		G28:TRIGGER_CUBE_HIDE_1ST
23:	MOV  	False		G29:TRIGGER_CUBE_HIDE_2ND
24:	MOV  	False		G30:TRIGGER_CUBE_MODULATE_1ST
25:	MOV  	False		G31:TRIGGER_CUBE_FORCE
26:	MOV  	False		G32:TRIGGER_TEIERA_MIRROR_X
27:	MOV  	False		G33:TRIGGER_TEIERA_MIRROR_Y
28:	MOV  	False		G34:TRIGGER_TEIERA_MIRROR_Z
29:	MOV  	False		G35:TRIGGER_AXIS
30:	RET  			
31:	PUSHN	5		
32:	LEN  	G5:IMPULSEDATA		BP(1)
33:	JGEQ 	BP(1)	P1:IMPNO	Quad:35
34:	ASIZE	P1:IMPNO	G5:IMPULSEDATA	
35:	SUB  	P3:END	P2:START	BP(1)
36:	SUB  	P1:IMPNO	1	BP(2)
37:	ANEW 	4		BP(3)
38:	SET  	0	0	BP(3)
39:	SET  	P2:START	1	BP(3)
40:	SET  	BP(1)	2	BP(3)
41:	DIV  	1	P4:TIME	BP(4)
42:	SET  	BP(4)	3	BP(3)
43:	SET  	BP(3)	BP(2)	G5:IMPULSEDATA
44:	RET  	Void		
45:	PUSHN	12		
46:	SUB  	P1:IMPNO	1	BP(1)
47:	GET  	G5:IMPULSEDATA	BP(1)	BP(1)
48:	CALLX	15 :GETTIME		0
49:	POP  			BP(2)
50:	GET  	BP(1)	1	BP(3)
51:	GET  	BP(1)	2	BP(4)
52:	GET  	BP(1)	0	BP(5)
53:	JNEQ 	BP(5)	0	Quad:55
54:	SET  	BP(2)	0	BP(1)
55:	GET  	BP(1)	0	BP(6)
56:	SUB  	BP(2)	BP(6)	BP(6)
57:	GET  	BP(1)	3	BP(7)
58:	MUL  	BP(6)	BP(7)	BP(5)
59:	JLEQ 	BP(5)	1	Quad:61
60:	MOV  	1		BP(5)
61:	MUL  	BP(4)	BP(5)	BP(6)
62:	ADD  	BP(3)	BP(6)	BP(6)
63:	RET  	BP(6)		
64:	PUSHN	4		
65:	SUB  	P1:IMPNO	1	BP(1)
66:	GET  	G5:IMPULSEDATA	BP(1)	BP(1)
67:	CALLX	15 :GETTIME		0
68:	POP  			BP(2)
69:	GET  	BP(1)	0	BP(3)
70:	SUB  	BP(3)		BP(2)
71:	GET  	BP(1)	3	BP(3)
72:	MUL  	BP(3)		BP(2)
73:	JGR  	BP(2)	1	Quad:75
74:	RET  	True		
75:	RET  	False		
76:	PUSHN	0		
77:	PUSH 	<cStr6 "Data.zip">		
78:	CALLX	14 :FILEDOWNLOAD		1
79:	POPN 	2		
80:	RET  	Void		
81:	PUSHN	0		
82:	CALLX	4 :CVMCAMERA		0
83:	POP  			G6:CAMERA
84:	PUSH 	G7:CAMPOS		
85:	CALLM	G6:CAMERA	m_0	1
86:	POPN 	2		
87:	CALLX	6 :CVMLIGHT		0
88:	POP  			G8:LUCE
89:	PUSH 	1		
90:	PUSH 	1		
91:	PUSH 	1		
92:	CALLM	G8:LUCE	m_1	3
93:	POPN 	4		
94:	PUSH 	1		
95:	PUSH 	1		
96:	PUSH 	1		
97:	CALLM	G8:LUCE	m_2	3
98:	POPN 	4		
99:	PUSH 	0		
100:	PUSH 	0		
101:	PUSH 	0		
102:	CALLM	G8:LUCE	m_3	3
103:	POPN 	4		
104:	CALLM	G8:LUCE	m_4	0
105:	POPN 	1		
106:	CALLX	7 :CVMMATERIAL		0
107:	POP  			G10:MAT
108:	MSET 	<cVct7 [ 0 , 0.2 , 0 , 1 ]>	m_5	G10:MAT
109:	MSET 	<cVct8 [ 0 , 1 , 0 , 1 ]>	m_6	G10:MAT
110:	MSET 	<cVct9 [ 0.1 , 0.1 , 0.1 , 1 ]>	m_7	G10:MAT
111:	MSET 	10	m_8	G10:MAT
112:	PUSH 	G9:POSL		
113:	CALLM	G8:LUCE	m_0	1
114:	POPN 	2		
115:	PUSH 	<cStr10 "ball.aam">		
116:	CALLX	12 :CVMNEWMESH		1
117:	POP  			G15:M_BALL
118:	POPN 	1		
119:	CALLM	G15:M_BALL	m_9	0
120:	POPN 	1		
121:	PUSH 	G15:M_BALL		
122:	CALLX	13 :CVMOBJ		1
123:	POP  			G16:O_BALL
124:	POPN 	1		
125:	CALLX	13 :CVMOBJ		0
126:	POP  			G19:O_BALL_PADRE
127:	PUSH 	0		
128:	PUSH 	0		
129:	PUSH 	5		
130:	PUSH 	G16:O_BALL		
131:	CALLM	G19:O_BALL_PADRE	m_10	4
132:	POPN 	5		
133:	PUSH 	<cStr11 "teiera.aam">		
134:	CALLX	12 :CVMNEWMESH		1
135:	POP  			G11:M_TEIERA
136:	POPN 	1		
137:	PUSH 	G11:M_TEIERA		
138:	CALLX	13 :CVMOBJ		1
139:	POP  			G12:O_TEIERA
140:	POPN 	1		
141:	PUSH 	5		
142:	CALLM	G11:M_TEIERA	m_11	1
143:	POPN 	2		
144:	CALLM	G11:M_TEIERA	m_9	0
145:	POPN 	1		
146:	PUSH 	<cStr12 "cubi.aam">		
147:	CALLX	12 :CVMNEWMESH		1
148:	POP  			G13:M_CUBE
149:	POPN 	1		
150:	PUSH 	G13:M_CUBE		
151:	CALLX	13 :CVMOBJ		1
152:	POP  			G14:O_CUBE
153:	POPN 	1		
154:	PUSH 	G20:POS_CUBE		
155:	CALLM	G14:O_CUBE	m_0	1
156:	POPN 	2		
157:	PUSH 	<cStr13 "simpson.jpg">		
158:	CALLX	3 :CVMBILLBOARD		1
159:	POP  			G17:B_SIMPSON
160:	POPN 	1		
161:	CALLX	13 :CVMOBJ		0
162:	POP  			G18:O_SIMPSON
163:	PUSH 	G17:B_SIMPSON		
164:	CALLM	G18:O_SIMPSON	m_12	1
165:	POPN 	2		
166:	PUSH 	G22:POS_SIMPSON		
167:	CALLM	G18:O_SIMPSON	m_0	1
168:	POPN 	2		
169:	PUSH 	2977		
170:	CALLX	19 :GLENABLE		1
171:	POPN 	2		
172:	RET  	Void		
173:	PUSHN	2		
174:	CALL 	Quad:346 :KEYBOARDMANAGER		
175:	POPN 	1		
176:	CALL 	Quad:634 :CAMERAMOVEMOUSE		
177:	POPN 	1		
178:	CALLX	1 :CAMERAGETPOSITION		0
179:	CALLM	G8:LUCE	m_0	1
180:	POPN 	2		
181:	JNB  	G27:TRIGGER_CUBE_MOVEMENT		Quad:189
182:	ADD  	<cVct14 [ 0 , 0.01 , 0 ]>		G20:POS_CUBE
183:	GET  	G20:POS_CUBE	1	BP(1)
184:	JLEQ 	BP(1)	10	Quad:186
185:	SET  	10	1	G20:POS_CUBE
186:	PUSH 	G20:POS_CUBE		
187:	CALLM	G14:O_CUBE	m_0	1
188:	POPN 	2		
189:	JNB  	G24:TRIGGER_SIMPSON_MOVEMENT		Quad:197
190:	SUB  	<cVct14 [ 0 , 0.01 , 0 ]>		G22:POS_SIMPSON
191:	MGET 	G22:POS_SIMPSON	m_13	BP(1)
192:	JGEQ 	BP(1)	-10	Quad:194
193:	MSET 	-10	m_13	G22:POS_SIMPSON
194:	PUSH 	G22:POS_SIMPSON		
195:	CALLM	G18:O_SIMPSON	m_0	1
196:	POPN 	2		
197:	JNB  	G25:TRIGGER_BALL_ROTATE		Quad:204
198:	PUSH 	0		
199:	PUSH 	1		
200:	PUSH 	0		
201:	PUSH 	1		
202:	CALLM	G16:O_BALL	m_14	4
203:	POPN 	5		
204:	JNB  	G26:TRIGGER_BALL_PADRE_ROTATE		Quad:211
205:	PUSH 	1		
206:	PUSH 	0		
207:	PUSH 	0		
208:	PUSH 	1		
209:	CALLM	G19:O_BALL_PADRE	m_15	4
210:	POPN 	5		
211:	JNB  	G28:TRIGGER_CUBE_HIDE_1ST		Quad:216
212:	PUSH 	0		
213:	CALLM	G13:M_CUBE	m_16	1
214:	POPN 	2		
215:	JMP  			Quad:219
216:	PUSH 	0		
217:	CALLM	G13:M_CUBE	m_17	1
218:	POPN 	2		
219:	JNB  	G29:TRIGGER_CUBE_HIDE_2ND		Quad:224
220:	PUSH 	1		
221:	CALLM	G13:M_CUBE	m_16	1
222:	POPN 	2		
223:	JMP  			Quad:227
224:	PUSH 	1		
225:	CALLM	G13:M_CUBE	m_17	1
226:	POPN 	2		
227:	JNB  	G31:TRIGGER_CUBE_FORCE		Quad:232
228:	PUSH 	G10:MAT		
229:	CALLM	G13:M_CUBE	m_18	1
230:	POPN 	2		
231:	JMP  			Quad:234
232:	CALLM	G13:M_CUBE	m_18	0
233:	POPN 	1		
234:	JNB  	G30:TRIGGER_CUBE_MODULATE_1ST		Quad:247
235:	SUB  	<cVct15 [ 0 , 0.01 , 0.01 , 0 ]>		G23:MOD_COLOR
236:	GET  	G23:MOD_COLOR	1	BP(1)
237:	JGEQ 	BP(1)	0	Quad:239
238:	SET  	0	1	G23:MOD_COLOR
239:	GET  	G23:MOD_COLOR	2	BP(1)
240:	JGEQ 	BP(1)	0	Quad:242
241:	SET  	0	2	G23:MOD_COLOR
242:	PUSH 	G23:MOD_COLOR		
243:	PUSH 	0		
244:	CALLM	G13:M_CUBE	m_19	2
245:	POPN 	3		
246:	JMP  			Quad:252
247:	MOV  	<cVct5 [ 1 , 1 , 1 , 1 ]>		G23:MOD_COLOR
248:	PUSH 	G23:MOD_COLOR		
249:	PUSH 	0		
250:	CALLM	G13:M_CUBE	m_19	2
251:	POPN 	3		
252:	JNB  	G32:TRIGGER_TEIERA_MIRROR_X		Quad:257
253:	PUSH 	0		
254:	CALLM	G11:M_TEIERA	m_20	1
255:	POPN 	2		
256:	MOV  	False		G32:TRIGGER_TEIERA_MIRROR_X
257:	JNB  	G33:TRIGGER_TEIERA_MIRROR_Y		Quad:262
258:	PUSH 	1		
259:	CALLM	G11:M_TEIERA	m_20	1
260:	POPN 	2		
261:	MOV  	False		G33:TRIGGER_TEIERA_MIRROR_Y
262:	JNB  	G34:TRIGGER_TEIERA_MIRROR_Z		Quad:267
263:	PUSH 	2		
264:	CALLM	G11:M_TEIERA	m_20	1
265:	POPN 	2		
266:	MOV  	False		G34:TRIGGER_TEIERA_MIRROR_Z
267:	CALLX	26 :SCENEBEGIN		0
268:	POPN 	1		
269:	CALLM	G18:O_SIMPSON	m_21	0
270:	POPN 	1		
271:	MOV  	0		BP(1)
272:	JNB  	G35:TRIGGER_AXIS		Quad:274
273:	MOV  	512		BP(1)
274:	PUSH 	BP(1)		
275:	CALLM	G19:O_BALL_PADRE	m_21	1
276:	POPN 	2		
277:	CALLM	G12:O_TEIERA	m_21	0
278:	POPN 	1		
279:	CALLM	G14:O_CUBE	m_21	0
280:	POPN 	1		
281:	CALL 	Quad:638 :DRAWGRID		
282:	POPN 	1		
283:	CALLX	27 :SCENEEND		0
284:	POPN 	1		
285:	PUSH 	<cStr16 "C -- muove il cubo-piano verso l'alto">		
286:	PUSH 	0.98		
287:	PUSH 	0.01		
288:	CALLX	2 :CONSOLETEXT		3
289:	POPN 	4		
290:	PUSH 	<cStr17 "S -- muove il billboard Simpson verso il basso">		
291:	PUSH 	0.96		
292:	PUSH 	0.01		
293:	CALLX	2 :CONSOLETEXT		3
294:	POPN 	4		
295:	PUSH 	<cStr18 "A -- mostra gli assi dei sistemi di riferimento del pallone (padre e figlio)">		
296:	PUSH 	0.94		
297:	PUSH 	0.01		
298:	CALLX	2 :CONSOLETEXT		3
299:	POPN 	4		
300:	PUSH 	<cStr19 "B -- ruota il pallone attorno al suo centro sull'asse Y globale">		
301:	PUSH 	0.92		
302:	PUSH 	0.01		
303:	CALLX	2 :CONSOLETEXT		3
304:	POPN 	4		
305:	PUSH 	<cStr20 "P -- ruota il pallone attorno all'origine e sull'asse Z locale al padre">		
306:	PUSH 	0.9		
307:	PUSH 	0.01		
308:	CALLX	2 :CONSOLETEXT		3
309:	POPN 	4		
310:	PUSH 	<cStr21 "1 -- nasconde il primo subset (cubo) del gruppo cubo-piano">		
311:	PUSH 	0.88		
312:	PUSH 	0.01		
313:	CALLX	2 :CONSOLETEXT		3
314:	POPN 	4		
315:	PUSH 	<cStr22 "2 -- nasconde il secondo subset (piano) del gruppo cubo-piano">		
316:	PUSH 	0.86		
317:	PUSH 	0.01		
318:	CALLX	2 :CONSOLETEXT		3
319:	POPN 	4		
320:	PUSH 	<cStr23 "X -- riflette la teiera sull'asse x">		
321:	PUSH 	0.84		
322:	PUSH 	0.01		
323:	CALLX	2 :CONSOLETEXT		3
324:	POPN 	4		
325:	PUSH 	<cStr24 "Y -- riflette la teiera sull'asse y">		
326:	PUSH 	0.82		
327:	PUSH 	0.01		
328:	CALLX	2 :CONSOLETEXT		3
329:	POPN 	4		
330:	PUSH 	<cStr25 "Z -- riflette la teiera sull'asse z">		
331:	PUSH 	0.8		
332:	PUSH 	0.01		
333:	CALLX	2 :CONSOLETEXT		3
334:	POPN 	4		
335:	PUSH 	<cStr26 "M -- modula il colore del cubo virandolo verso il rosso">		
336:	PUSH 	0.78		
337:	PUSH 	0.01		
338:	CALLX	2 :CONSOLETEXT		3
339:	POPN 	4		
340:	PUSH 	<cStr27 "F -- forza il colore del gruppo cubo-piano al verde">		
341:	PUSH 	0.76		
342:	PUSH 	0.01		
343:	CALLX	2 :CONSOLETEXT		3
344:	POPN 	4		
345:	RET  	Void		
346:	PUSHN	12		
347:	PUSH 	<cStr28 "C">		
348:	CALL 	Quad:689 :KEYSTATUS		
349:	POP  			BP(1)
350:	POPN 	1		
351:	JNEQ 	BP(1)	1	Quad:357
352:	JB   	G27:TRIGGER_CUBE_MOVEMENT		Quad:355
353:	MOV  	True		BP(1)
354:	JMP  			Quad:356
355:	MOV  	False		BP(1)
356:	MOV  	BP(1)		G27:TRIGGER_CUBE_MOVEMENT
357:	PUSH 	<cStr29 "S">		
358:	CALL 	Quad:689 :KEYSTATUS		
359:	POP  			BP(2)
360:	POPN 	1		
361:	JNEQ 	BP(2)	1	Quad:367
362:	JB   	G24:TRIGGER_SIMPSON_MOVEMENT		Quad:365
363:	MOV  	True		BP(2)
364:	JMP  			Quad:366
365:	MOV  	False		BP(2)
366:	MOV  	BP(2)		G24:TRIGGER_SIMPSON_MOVEMENT
367:	PUSH 	<cStr30 "B">		
368:	CALL 	Quad:689 :KEYSTATUS		
369:	POP  			BP(3)
370:	POPN 	1		
371:	JNEQ 	BP(3)	1	Quad:377
372:	JB   	G25:TRIGGER_BALL_ROTATE		Quad:375
373:	MOV  	True		BP(3)
374:	JMP  			Quad:376
375:	MOV  	False		BP(3)
376:	MOV  	BP(3)		G25:TRIGGER_BALL_ROTATE
377:	PUSH 	<cStr31 "P">		
378:	CALL 	Quad:689 :KEYSTATUS		
379:	POP  			BP(4)
380:	POPN 	1		
381:	JNEQ 	BP(4)	1	Quad:387
382:	JB   	G26:TRIGGER_BALL_PADRE_ROTATE		Quad:385
383:	MOV  	True		BP(4)
384:	JMP  			Quad:386
385:	MOV  	False		BP(4)
386:	MOV  	BP(4)		G26:TRIGGER_BALL_PADRE_ROTATE
387:	PUSH 	<cStr32 "1">		
388:	CALL 	Quad:689 :KEYSTATUS		
389:	POP  			BP(5)
390:	POPN 	1		
391:	JNEQ 	BP(5)	1	Quad:397
392:	JB   	G28:TRIGGER_CUBE_HIDE_1ST		Quad:395
393:	MOV  	True		BP(5)
394:	JMP  			Quad:396
395:	MOV  	False		BP(5)
396:	MOV  	BP(5)		G28:TRIGGER_CUBE_HIDE_1ST
397:	PUSH 	<cStr33 "2">		
398:	CALL 	Quad:689 :KEYSTATUS		
399:	POP  			BP(6)
400:	POPN 	1		
401:	JNEQ 	BP(6)	1	Quad:407
402:	JB   	G29:TRIGGER_CUBE_HIDE_2ND		Quad:405
403:	MOV  	True		BP(6)
404:	JMP  			Quad:406
405:	MOV  	False		BP(6)
406:	MOV  	BP(6)		G29:TRIGGER_CUBE_HIDE_2ND
407:	PUSH 	<cStr34 "X">		
408:	CALL 	Quad:689 :KEYSTATUS		
409:	POP  			BP(7)
410:	POPN 	1		
411:	JNEQ 	BP(7)	1	Quad:417
412:	JB   	G32:TRIGGER_TEIERA_MIRROR_X		Quad:415
413:	MOV  	True		BP(7)
414:	JMP  			Quad:416
415:	MOV  	False		BP(7)
416:	MOV  	BP(7)		G32:TRIGGER_TEIERA_MIRROR_X
417:	PUSH 	<cStr35 "Y">		
418:	CALL 	Quad:689 :KEYSTATUS		
419:	POP  			BP(8)
420:	POPN 	1		
421:	JNEQ 	BP(8)	1	Quad:427
422:	JB   	G32:TRIGGER_TEIERA_MIRROR_X		Quad:425
423:	MOV  	True		BP(8)
424:	JMP  			Quad:426
425:	MOV  	False		BP(8)
426:	MOV  	BP(8)		G33:TRIGGER_TEIERA_MIRROR_Y
427:	PUSH 	<cStr36 "Z">		
428:	CALL 	Quad:689 :KEYSTATUS		
429:	POP  			BP(9)
430:	POPN 	1		
431:	JNEQ 	BP(9)	1	Quad:437
432:	JB   	G34:TRIGGER_TEIERA_MIRROR_Z		Quad:435
433:	MOV  	True		BP(9)
434:	JMP  			Quad:436
435:	MOV  	False		BP(9)
436:	MOV  	BP(9)		G34:TRIGGER_TEIERA_MIRROR_Z
437:	PUSH 	<cStr37 "M">		
438:	CALL 	Quad:689 :KEYSTATUS		
439:	POP  			BP(10)
440:	POPN 	1		
441:	JNEQ 	BP(10)	1	Quad:447
442:	JB   	G30:TRIGGER_CUBE_MODULATE_1ST		Quad:445
443:	MOV  	True		BP(10)
444:	JMP  			Quad:446
445:	MOV  	False		BP(10)
446:	MOV  	BP(10)		G30:TRIGGER_CUBE_MODULATE_1ST
447:	PUSH 	<cStr38 "F">		
448:	CALL 	Quad:689 :KEYSTATUS		
449:	POP  			BP(11)
450:	POPN 	1		
451:	JNEQ 	BP(11)	1	Quad:457
452:	JB   	G31:TRIGGER_CUBE_FORCE		Quad:455
453:	MOV  	True		BP(11)
454:	JMP  			Quad:456
455:	MOV  	False		BP(11)
456:	MOV  	BP(11)		G31:TRIGGER_CUBE_FORCE
457:	PUSH 	<cStr39 "A">		
458:	CALL 	Quad:689 :KEYSTATUS		
459:	POP  			BP(12)
460:	POPN 	1		
461:	JNEQ 	BP(12)	1	Quad:467
462:	JB   	G35:TRIGGER_AXIS		Quad:465
463:	MOV  	True		BP(12)
464:	JMP  			Quad:466
465:	MOV  	False		BP(12)
466:	MOV  	BP(12)		G35:TRIGGER_AXIS
467:	RET  	Void		
468:	PUSHN	0		
469:	RET  	Void		
470:	PUSHN	0		
471:	RET  	Void		
472:	PUSHN	0		
473:	RET  	Void		
474:	PUSHN	2		
475:	PUSH 	2896		
476:	CALLX	19 :GLENABLE		1
477:	POPN 	2		
478:	PUSH 	<cVct40 [ 0 , 0 , 1 , 1 ]>		
479:	PUSH 	4608		
480:	PUSH 	1028		
481:	CALLX	22 :GLMATERIAL		3
482:	POPN 	4		
483:	PUSH 	<cVct40 [ 0 , 0 , 1 , 1 ]>		
484:	PUSH 	4609		
485:	PUSH 	1028		
486:	CALLX	22 :GLMATERIAL		3
487:	POPN 	4		
488:	PUSH 	<cVct41 [ 0 , 0 , 0 , 1 ]>		
489:	PUSH 	4610		
490:	PUSH 	1028		
491:	CALLX	22 :GLMATERIAL		3
492:	POPN 	4		
493:	PUSH 	127		
494:	PUSH 	5633		
495:	PUSH 	1028		
496:	CALLX	22 :GLMATERIAL		3
497:	POPN 	4		
498:	PUSH 	3553		
499:	CALLX	18 :GLDISABLE		1
500:	POPN 	2		
501:	PUSH 	7		
502:	CALLX	16 :GLBEGIN		1
503:	POPN 	2		
504:	PUSH 	1		
505:	PUSH 	0		
506:	PUSH 	0		
507:	CALLX	23 :GLNORMAL		3
508:	POPN 	4		
509:	NEG  	P1:SIZE		BP(1)
510:	NEG  	P1:SIZE		BP(2)
511:	PUSH 	0		
512:	PUSH 	BP(2)		
513:	PUSH 	BP(1)		
514:	CALLX	24 :GLVERTEX		3
515:	POPN 	4		
516:	NEG  	P1:SIZE		BP(1)
517:	PUSH 	0		
518:	PUSH 	BP(1)		
519:	PUSH 	P1:SIZE		
520:	CALLX	24 :GLVERTEX		3
521:	POPN 	4		
522:	PUSH 	0		
523:	PUSH 	P1:SIZE		
524:	PUSH 	P1:SIZE		
525:	CALLX	24 :GLVERTEX		3
526:	POPN 	4		
527:	NEG  	P1:SIZE		BP(1)
528:	PUSH 	0		
529:	PUSH 	P1:SIZE		
530:	PUSH 	BP(1)		
531:	CALLX	24 :GLVERTEX		3
532:	POPN 	4		
533:	CALLX	20 :GLEND		0
534:	POPN 	1		
535:	PUSH 	3553		
536:	CALLX	19 :GLENABLE		1
537:	POPN 	2		
538:	RET  	Void		
539:	PUSHN	8		
540:	JNV  	P1:CAM		Quad:543
541:	CALLX	0 :CAMERAGETCURRENT		0
542:	POP  			P1:CAM
543:	JNV  	P2:TRASL_SENSITIVITY		Quad:545
544:	MOV  	0.001		P2:TRASL_SENSITIVITY
545:	JNV  	P3:ROT_SENSITIVITY		Quad:547
546:	MOV  	0.01		P3:ROT_SENSITIVITY
547:	JNV  	S40:$STATIC$_00000001_#FLAG_000041#		Quad:553
548:	MOV  	False		S36:$STATIC$_00000008_INMOUSER
549:	MOV  	False		S37:$STATIC$_00000004_$VALUE_INMOUSER$
550:	MOV  	False		S38:$STATIC$_00000007_INMOUSEL
551:	MOV  	False		S39:$STATIC$_00000003_$VALUE_INMOUSEL$
552:	MOV  	1		S40:$STATIC$_00000001_#FLAG_000041#
553:	JNV  	S45:$STATIC$_00000002_#FLAG_000046#		Quad:559
554:	MOV  	0		S41:$STATIC$_00000009_PRECX
555:	MOV  	0		S42:$STATIC$_00000005_$VALUE_PRECX$
556:	MOV  	0		S43:$STATIC$_00000010_PRECY
557:	MOV  	0		S44:$STATIC$_00000006_$VALUE_PRECY$
558:	MOV  	1		S45:$STATIC$_00000002_#FLAG_000046#
559:	MGET 	G0:MOUSE	m_22	BP(1)
560:	JNB  	BP(1)		Quad:588
561:	MGET 	G0:MOUSE	m_23	BP(1)
562:	JB   	BP(1)		Quad:588
563:	JNB  	S38:$STATIC$_00000007_INMOUSEL		Quad:583
564:	MGET 	G0:MOUSE	m_24	BP(1)
565:	SUB  	S41:$STATIC$_00000009_PRECX		BP(1)
566:	MUL  	P3:ROT_SENSITIVITY		BP(1)
567:	PUSH 	0		
568:	PUSH 	1		
569:	PUSH 	0		
570:	PUSH 	BP(1)		
571:	CALLM	P1:CAM	m_25	4
572:	POPN 	5		
573:	MGET 	G0:MOUSE	m_13	BP(1)
574:	SUB  	S43:$STATIC$_00000010_PRECY		BP(1)
575:	MUL  	P3:ROT_SENSITIVITY		BP(1)
576:	PUSH 	0		
577:	PUSH 	0		
578:	PUSH 	1		
579:	PUSH 	BP(1)		
580:	CALLM	P1:CAM	m_26	4
581:	POPN 	5		
582:	JMP  			Quad:585
583:	MGET 	G0:MOUSE	m_24	S41:$STATIC$_00000009_PRECX
584:	MGET 	G0:MOUSE	m_13	S43:$STATIC$_00000010_PRECY
585:	MOV  	True		S38:$STATIC$_00000007_INMOUSEL
586:	MOV  	False		S36:$STATIC$_00000008_INMOUSER
587:	RET  	Void		
588:	MGET 	G0:MOUSE	m_23	BP(1)
589:	JNB  	BP(1)		Quad:631
590:	JNB  	S36:$STATIC$_00000008_INMOUSER		Quad:626
591:	MGET 	G0:MOUSE	m_22	BP(1)
592:	JNB  	BP(1)		Quad:607
593:	CALLM	P1:CAM	m_27	0
594:	POP  			BP(1)
595:	NEG  	BP(1)		BP(1)
596:	MGET 	G0:MOUSE	m_13	BP(2)
597:	SUB  	S43:$STATIC$_00000010_PRECY		BP(2)
598:	MUL  	BP(2)		BP(1)
599:	CALLM	P1:CAM	m_28	0
600:	POP  			BP(2)
601:	MUL  	BP(1)	P2:TRASL_SENSITIVITY	BP(3)
602:	ADD  	BP(3)		BP(2)
603:	PUSH 	BP(2)		
604:	CALLM	P1:CAM	m_0	1
605:	POPN 	2		
606:	JMP  			Quad:628
607:	CALLM	P1:CAM	m_29	0
608:	POP  			BP(2)
609:	MGET 	G0:MOUSE	m_24	BP(3)
610:	SUB  	S41:$STATIC$_00000009_PRECX		BP(3)
611:	MUL  	BP(3)		BP(2)
612:	CALLM	P1:CAM	m_30	0
613:	POP  			BP(3)
614:	MGET 	G0:MOUSE	m_13	BP(4)
615:	SUB  	S43:$STATIC$_00000010_PRECY		BP(4)
616:	MUL  	BP(4)		BP(3)
617:	CALLM	P1:CAM	m_28	0
618:	POP  			BP(4)
619:	ADD  	BP(3)	BP(2)	BP(5)
620:	MUL  	P2:TRASL_SENSITIVITY		BP(5)
621:	ADD  	BP(5)		BP(4)
622:	PUSH 	BP(4)		
623:	CALLM	P1:CAM	m_0	1
624:	POPN 	2		
625:	JMP  			Quad:628
626:	MGET 	G0:MOUSE	m_24	S41:$STATIC$_00000009_PRECX
627:	MGET 	G0:MOUSE	m_13	S43:$STATIC$_00000010_PRECY
628:	MOV  	True		S36:$STATIC$_00000008_INMOUSER
629:	MOV  	False		S38:$STATIC$_00000007_INMOUSEL
630:	RET  	Void		
631:	MOV  	False		S36:$STATIC$_00000008_INMOUSER
632:	MOV  	False		S38:$STATIC$_00000007_INMOUSEL
633:	RET  	Void		
634:	PUSHN	3		
635:	CALL 	Quad:539 :CAMERAMOVEMOUSE_MBL_LC		
636:	POPN 	4		
637:	RET  	Void		
638:	PUSHN	2		
639:	PUSH 	1		
640:	CALLX	21 :GLLINEWIDTH		1
641:	POPN 	2		
642:	PUSH 	2896		
643:	CALLX	18 :GLDISABLE		1
644:	POPN 	2		
645:	PUSH 	3553		
646:	CALLX	18 :GLDISABLE		1
647:	POPN 	2		
648:	PUSH 	0.5		
649:	PUSH 	0.5		
650:	PUSH 	0.5		
651:	CALLX	17 :GLCOLOR		3
652:	POPN 	4		
653:	PUSH 	1		
654:	CALLX	16 :GLBEGIN		1
655:	POPN 	2		
656:	MOV  	-100		BP(1)
657:	JGR  	BP(1)	100	Quad:680
658:	PUSH 	100		
659:	PUSH 	0		
660:	PUSH 	BP(1)		
661:	CALLX	24 :GLVERTEX		3
662:	POPN 	4		
663:	PUSH 	-100		
664:	PUSH 	0		
665:	PUSH 	BP(1)		
666:	CALLX	24 :GLVERTEX		3
667:	POPN 	4		
668:	PUSH 	BP(1)		
669:	PUSH 	0		
670:	PUSH 	100		
671:	CALLX	24 :GLVERTEX		3
672:	POPN 	4		
673:	PUSH 	BP(1)		
674:	PUSH 	0		
675:	PUSH 	-100		
676:	CALLX	24 :GLVERTEX		3
677:	POPN 	4		
678:	ADD  	10		BP(1)
679:	JMP  			Quad:657
680:	CALLX	20 :GLEND		0
681:	POPN 	1		
682:	PUSH 	2896		
683:	CALLX	19 :GLENABLE		1
684:	POPN 	2		
685:	PUSH 	3553		
686:	CALLX	19 :GLENABLE		1
687:	POPN 	2		
688:	RET  	Void		
689:	PUSHN	1		
690:	VTYPE	P1:KEYCODE		BP(1)
691:	JNEQ 	BP(1)	<cStr29 "S">	Quad:693
692:	ASC  	P1:KEYCODE		P1:KEYCODE
693:	JNV  	S48:$STATIC$_00000011_#FLAG_000049#		Quad:698
694:	VNEW 	255		BP(1)
695:	MOV  	BP(1)		S46:$STATIC$_00000013_KEYS_STATI
696:	MOV  	BP(1)		S47:$STATIC$_00000012_$VALUE_KEYS_STATI$
697:	MOV  	1		S48:$STATIC$_00000011_#FLAG_000049#
698:	PUSH 	P1:KEYCODE		
699:	CALLX	25 :KEYPRESSED		1
700:	POP  			BP(1)
701:	POPN 	1		
702:	JNB  	BP(1)		Quad:708
703:	GET  	S46:$STATIC$_00000013_KEYS_STATI	P1:KEYCODE	BP(1)
704:	JNEQ 	BP(1)	0	Quad:707
705:	SET  	1	P1:KEYCODE	S46:$STATIC$_00000013_KEYS_STATI
706:	RET  	1		
707:	RET  	-1		
708:	SET  	0	P1:KEYCODE	S46:$STATIC$_00000013_KEYS_STATI
709:	RET  	0		
